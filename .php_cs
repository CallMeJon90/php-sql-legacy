<?php

$finder = Symfony\CS\Finder\DefaultFinder::create()
    ->in(__DIR__ . '/lib')
    ->in(__DIR__ . '/tests')
;

$fixers = array(
    // 'align_double_arrow',
    // 'align_equals',
    'array_element_no_space_before_comma',
    'array_element_white_space_after_comma',
    'blankline_after_open_tag',
    // 'braces', // Nei file PHTML incasina i tag di apertura e chiusura php, usiamo 'braces_php_file_only'
    'braces_php_file_only',
    'class_definition',
    // 'combine_consecutive_unsets',
    'concat_with_spaces',
    // 'concat_without_spaces',
    'css_order',
    'declare_equal_normalize',
    // 'double_arrow_multiline_whitespaces',
    'duplicate_semicolon',
    // 'echo_to_print',
    'elseif',
    'empty_multiline_comment',
    'empty_return',
    'encoding',
    'eof_ending',
    'ereg_to_preg',
    'extra_empty_lines',
    'final_internal_class',
    'function_call_space',
    'function_declaration',
    'function_reference_space',
    'function_typehint_space',
    'hash_to_slash_comment',
    // 'header_comment',
    'heredoc_to_nowdoc',
    'include',
    'indentation',
    'inline_comment_spacer',
    'internal_tab',
    'join_function',
    'line_after_namespace',
    'linefeed',
    'list_commas',
    // 'logical_not_operators_with_spaces',
    'logical_not_operators_with_successor_space',
    'long_array_syntax',
    'lowercase_cast',
    'lowercase_constants',
    'lowercase_keywords',
    'method_argument_default_value',
    'method_argument_space',
    'multiline_array_trailing_comma',
    // 'multiline_spaces_before_semicolon',
    'multiple_use',
    'namespace_no_leading_whitespace',
    'native_function_casing',
    'new_with_braces',
    'newline_after_open_tag',
    'no_blank_lines_after_class_opening',
    // 'no_blank_lines_before_namespace',
    'no_empty_comment',
    'no_empty_lines_after_phpdocs',
    'no_empty_phpdoc',
    'no_empty_statement',
    'no_trailing_whitespace_in_comment',
    'no_useless_else',
    'no_useless_return',
    'object_operator',
    'operators_spaces',
    'ordered_use',
    'parenthesis',
    'php4_constructor',
    'php_closing_tag',
    'php_unit_construct',
    'php_unit_dedicate_assert',
    // 'php_unit_strict',
    'phpdoc_annotation_without_dot',
    'phpdoc_indent',
    'phpdoc_inline_tag',
    'phpdoc_no_access',
    'phpdoc_no_empty_return',
    'phpdoc_no_package',
    'phpdoc_order',
    'phpdoc_params',
    'phpdoc_scalar',
    'phpdoc_separation',
    // 'phpdoc_short_description',
    'phpdoc_single_line_var_spacing',
    'phpdoc_to_comment',
    'phpdoc_trim',
    // 'phpdoc_type_to_var',
    'phpdoc_types',
    'phpdoc_var_to_type',
    'phpdoc_var_without_name',
    'pre_increment',
    'print_to_echo',
    'protected_to_private',
    'psr0',
    'remove_leading_slash_use',
    'remove_lines_between_uses',
    'return',
    'self_accessor',
    // 'short_array_syntax',
    'short_bool_cast',
    'short_echo_tag',
    'short_scalar_cast',
    'short_tag',
    'single_array_no_trailing_comma',
    'single_blank_line_before_namespace',
    'single_line_after_imports',
    'single_quote',
    // 'spaces_after_semicolon',
    'spaces_before_semicolon',
    'spaces_cast',
    'standardize_not_equal',
    'strict',
    'strict_param',
    'switch_case_semicolon_to_colon',
    'switch_case_space',
    'ternary_spaces',
    'trailing_spaces',
    'trim_array_spaces',
    // 'unalign_double_arrow',
    // 'unalign_equals',
    // 'unary_operators_spaces',
    'unneeded_control_parentheses',
    'unused_use',
    'utf8',
    'visibility',
    'whitespacy_lines',
);

return Symfony\CS\Config::create()
    ->level(null)
    ->finder($finder)
    ->fixers($fixers)
;
